/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the CreateTenantConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTenantConnectionResponse{}

// CreateTenantConnectionResponse struct for CreateTenantConnectionResponse
type CreateTenantConnectionResponse struct {
	ConnectionId NullableString `json:"connection_id,omitempty"`
}

// NewCreateTenantConnectionResponse instantiates a new CreateTenantConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantConnectionResponse() *CreateTenantConnectionResponse {
	this := CreateTenantConnectionResponse{}
	return &this
}

// NewCreateTenantConnectionResponseWithDefaults instantiates a new CreateTenantConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantConnectionResponseWithDefaults() *CreateTenantConnectionResponse {
	this := CreateTenantConnectionResponse{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTenantConnectionResponse) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectionId.Get()
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantConnectionResponse) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionId.Get(), o.ConnectionId.IsSet()
}

// HasConnectionId returns a boolean if a field is not nil.
func (o *CreateTenantConnectionResponse) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given NullableString and assigns it to the ConnectionId field.
func (o *CreateTenantConnectionResponse) SetConnectionId(v string) {
	o.ConnectionId.Set(&v)
}

// SetConnectionIdNil sets the value for ConnectionId to be an explicit nil
func (o *CreateTenantConnectionResponse) SetConnectionIdNil() {
	o.ConnectionId.Set(nil)
}

// UnsetConnectionId ensures that no value is present for ConnectionId, not even an explicit nil
func (o *CreateTenantConnectionResponse) UnsetConnectionId() {
	o.ConnectionId.Unset()
}

func (o CreateTenantConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTenantConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionId.IsSet() {
		toSerialize["connection_id"] = o.ConnectionId.Get()
	}
	return toSerialize, nil
}

type NullableCreateTenantConnectionResponse struct {
	value *CreateTenantConnectionResponse
	isSet bool
}

func (v NullableCreateTenantConnectionResponse) Get() *CreateTenantConnectionResponse {
	return v.value
}

func (v *NullableCreateTenantConnectionResponse) Set(val *CreateTenantConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantConnectionResponse(val *CreateTenantConnectionResponse) *NullableCreateTenantConnectionResponse {
	return &NullableCreateTenantConnectionResponse{value: val, isSet: true}
}

func (v NullableCreateTenantConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
