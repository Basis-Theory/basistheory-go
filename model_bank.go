/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Server to Server Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// Bank struct for Bank
type Bank struct {
	RoutingNumber string `json:"routing_number"`
	AccountNumber string `json:"account_number"`
}

// NewBank instantiates a new Bank object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBank(routingNumber string, accountNumber string) *Bank {
	this := Bank{}
	this.RoutingNumber = routingNumber
	this.AccountNumber = accountNumber
	return &this
}

// NewBankWithDefaults instantiates a new Bank object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankWithDefaults() *Bank {
	this := Bank{}
	return &this
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *Bank) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *Bank) GetRoutingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *Bank) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *Bank) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *Bank) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *Bank) SetAccountNumber(v string) {
	o.AccountNumber = v
}

func (o Bank) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	return json.Marshal(toSerialize)
}

type NullableBank struct {
	value *Bank
	isSet bool
}

func (v NullableBank) Get() *Bank {
	return v.value
}

func (v *NullableBank) Set(val *Bank) {
	v.value = val
	v.isSet = true
}

func (v NullableBank) IsSet() bool {
	return v.isSet
}

func (v *NullableBank) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBank(val *Bank) *NullableBank {
	return &NullableBank{value: val, isSet: true}
}

func (v NullableBank) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBank) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


