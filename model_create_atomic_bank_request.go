/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Server to Server Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// CreateAtomicBankRequest struct for CreateAtomicBankRequest
type CreateAtomicBankRequest struct {
	Bank Bank `json:"bank"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

// NewCreateAtomicBankRequest instantiates a new CreateAtomicBankRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAtomicBankRequest(bank Bank) *CreateAtomicBankRequest {
	this := CreateAtomicBankRequest{}
	this.Bank = bank
	return &this
}

// NewCreateAtomicBankRequestWithDefaults instantiates a new CreateAtomicBankRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAtomicBankRequestWithDefaults() *CreateAtomicBankRequest {
	this := CreateAtomicBankRequest{}
	return &this
}

// GetBank returns the Bank field value
func (o *CreateAtomicBankRequest) GetBank() Bank {
	if o == nil {
		var ret Bank
		return ret
	}

	return o.Bank
}

// GetBankOk returns a tuple with the Bank field value
// and a boolean to check if the value has been set.
func (o *CreateAtomicBankRequest) GetBankOk() (*Bank, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bank, true
}

// SetBank sets field value
func (o *CreateAtomicBankRequest) SetBank(v Bank) {
	o.Bank = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAtomicBankRequest) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAtomicBankRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateAtomicBankRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateAtomicBankRequest) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o CreateAtomicBankRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bank"] = o.Bank
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAtomicBankRequest struct {
	value *CreateAtomicBankRequest
	isSet bool
}

func (v NullableCreateAtomicBankRequest) Get() *CreateAtomicBankRequest {
	return v.value
}

func (v *NullableCreateAtomicBankRequest) Set(val *CreateAtomicBankRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAtomicBankRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAtomicBankRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAtomicBankRequest(val *CreateAtomicBankRequest) *NullableCreateAtomicBankRequest {
	return &NullableCreateAtomicBankRequest{value: val, isSet: true}
}

func (v NullableCreateAtomicBankRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAtomicBankRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


