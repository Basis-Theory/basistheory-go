/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Server to Server Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// UpdateInboundProxyRequest struct for UpdateInboundProxyRequest
type UpdateInboundProxyRequest struct {
	Name string `json:"name"`
	DestinationUrl string `json:"destination_url"`
	RequestReactorId string `json:"request_reactor_id"`
}

// NewUpdateInboundProxyRequest instantiates a new UpdateInboundProxyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInboundProxyRequest(name string, destinationUrl string, requestReactorId string) *UpdateInboundProxyRequest {
	this := UpdateInboundProxyRequest{}
	this.Name = name
	this.DestinationUrl = destinationUrl
	this.RequestReactorId = requestReactorId
	return &this
}

// NewUpdateInboundProxyRequestWithDefaults instantiates a new UpdateInboundProxyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInboundProxyRequestWithDefaults() *UpdateInboundProxyRequest {
	this := UpdateInboundProxyRequest{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateInboundProxyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateInboundProxyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateInboundProxyRequest) SetName(v string) {
	o.Name = v
}

// GetDestinationUrl returns the DestinationUrl field value
func (o *UpdateInboundProxyRequest) GetDestinationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationUrl
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateInboundProxyRequest) GetDestinationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationUrl, true
}

// SetDestinationUrl sets field value
func (o *UpdateInboundProxyRequest) SetDestinationUrl(v string) {
	o.DestinationUrl = v
}

// GetRequestReactorId returns the RequestReactorId field value
func (o *UpdateInboundProxyRequest) GetRequestReactorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestReactorId
}

// GetRequestReactorIdOk returns a tuple with the RequestReactorId field value
// and a boolean to check if the value has been set.
func (o *UpdateInboundProxyRequest) GetRequestReactorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestReactorId, true
}

// SetRequestReactorId sets field value
func (o *UpdateInboundProxyRequest) SetRequestReactorId(v string) {
	o.RequestReactorId = v
}

func (o UpdateInboundProxyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["destination_url"] = o.DestinationUrl
	}
	if true {
		toSerialize["request_reactor_id"] = o.RequestReactorId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateInboundProxyRequest struct {
	value *UpdateInboundProxyRequest
	isSet bool
}

func (v NullableUpdateInboundProxyRequest) Get() *UpdateInboundProxyRequest {
	return v.value
}

func (v *NullableUpdateInboundProxyRequest) Set(val *UpdateInboundProxyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInboundProxyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInboundProxyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInboundProxyRequest(val *UpdateInboundProxyRequest) *NullableUpdateInboundProxyRequest {
	return &NullableUpdateInboundProxyRequest{value: val, isSet: true}
}

func (v NullableUpdateInboundProxyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInboundProxyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


