/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the Pagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pagination{}

// Pagination struct for Pagination
type Pagination struct {
	TotalItems NullableInt32 `json:"total_items,omitempty"`
	PageNumber NullableInt32 `json:"page_number,omitempty"`
	PageSize   NullableInt32 `json:"page_size,omitempty"`
	TotalPages NullableInt32 `json:"total_pages,omitempty"`
	// Deprecated
	After NullableString `json:"after,omitempty"`
	Next  NullableString `json:"next,omitempty"`
}

// NewPagination instantiates a new Pagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagination() *Pagination {
	this := Pagination{}
	return &this
}

// NewPaginationWithDefaults instantiates a new Pagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationWithDefaults() *Pagination {
	this := Pagination{}
	return &this
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalItems.Get()
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetTotalItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalItems.Get(), o.TotalItems.IsSet()
}

// HasTotalItems returns a boolean if a field is not nil.
func (o *Pagination) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given NullableInt32 and assigns it to the TotalItems field.
func (o *Pagination) SetTotalItems(v int32) {
	o.TotalItems.Set(&v)
}

// SetTotalItemsNil sets the value for TotalItems to be an explicit nil
func (o *Pagination) SetTotalItemsNil() {
	o.TotalItems.Set(nil)
}

// UnsetTotalItems ensures that no value is present for TotalItems, not even an explicit nil
func (o *Pagination) UnsetTotalItems() {
	o.TotalItems.Unset()
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.PageNumber.Get()
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageNumber.Get(), o.PageNumber.IsSet()
}

// HasPageNumber returns a boolean if a field is not nil.
func (o *Pagination) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given NullableInt32 and assigns it to the PageNumber field.
func (o *Pagination) SetPageNumber(v int32) {
	o.PageNumber.Set(&v)
}

// SetPageNumberNil sets the value for PageNumber to be an explicit nil
func (o *Pagination) SetPageNumberNil() {
	o.PageNumber.Set(nil)
}

// UnsetPageNumber ensures that no value is present for PageNumber, not even an explicit nil
func (o *Pagination) UnsetPageNumber() {
	o.PageNumber.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize.Get()) {
		var ret int32
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field is not nil.
func (o *Pagination) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given NullableInt32 and assigns it to the PageSize field.
func (o *Pagination) SetPageSize(v int32) {
	o.PageSize.Set(&v)
}

// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *Pagination) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *Pagination) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalPages.Get()
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetTotalPagesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPages.Get(), o.TotalPages.IsSet()
}

// HasTotalPages returns a boolean if a field is not nil.
func (o *Pagination) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given NullableInt32 and assigns it to the TotalPages field.
func (o *Pagination) SetTotalPages(v int32) {
	o.TotalPages.Set(&v)
}

// SetTotalPagesNil sets the value for TotalPages to be an explicit nil
func (o *Pagination) SetTotalPagesNil() {
	o.TotalPages.Set(nil)
}

// UnsetTotalPages ensures that no value is present for TotalPages, not even an explicit nil
func (o *Pagination) UnsetTotalPages() {
	o.TotalPages.Unset()
}

// GetAfter returns the After field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *Pagination) GetAfter() string {
	if o == nil || IsNil(o.After.Get()) {
		var ret string
		return ret
	}
	return *o.After.Get()
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *Pagination) GetAfterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.After.Get(), o.After.IsSet()
}

// HasAfter returns a boolean if a field is not nil.
func (o *Pagination) HasAfter() bool {
	if o != nil && !IsNil(o.After) {
		return true
	}

	return false
}

// SetAfter gets a reference to the given NullableString and assigns it to the After field.
// Deprecated
func (o *Pagination) SetAfter(v string) {
	o.After.Set(&v)
}

// SetAfterNil sets the value for After to be an explicit nil
func (o *Pagination) SetAfterNil() {
	o.After.Set(nil)
}

// UnsetAfter ensures that no value is present for After, not even an explicit nil
func (o *Pagination) UnsetAfter() {
	o.After.Unset()
}

// GetNext returns the Next field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetNext() string {
	if o == nil || IsNil(o.Next.Get()) {
		var ret string
		return ret
	}
	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// HasNext returns a boolean if a field is not nil.
func (o *Pagination) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given NullableString and assigns it to the Next field.
func (o *Pagination) SetNext(v string) {
	o.Next.Set(&v)
}

// SetNextNil sets the value for Next to be an explicit nil
func (o *Pagination) SetNextNil() {
	o.Next.Set(nil)
}

// UnsetNext ensures that no value is present for Next, not even an explicit nil
func (o *Pagination) UnsetNext() {
	o.Next.Unset()
}

func (o Pagination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalItems.IsSet() {
		toSerialize["total_items"] = o.TotalItems.Get()
	}
	if o.PageNumber.IsSet() {
		toSerialize["page_number"] = o.PageNumber.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["page_size"] = o.PageSize.Get()
	}
	if o.TotalPages.IsSet() {
		toSerialize["total_pages"] = o.TotalPages.Get()
	}
	if o.After.IsSet() {
		toSerialize["after"] = o.After.Get()
	}
	if o.Next.IsSet() {
		toSerialize["next"] = o.Next.Get()
	}
	return toSerialize, nil
}

type NullablePagination struct {
	value *Pagination
	isSet bool
}

func (v NullablePagination) Get() *Pagination {
	return v.value
}

func (v *NullablePagination) Set(val *Pagination) {
	v.value = val
	v.isSet = true
}

func (v NullablePagination) IsSet() bool {
	return v.isSet
}

func (v *NullablePagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagination(val *Pagination) *NullablePagination {
	return &NullablePagination{value: val, isSet: true}
}

func (v NullablePagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
