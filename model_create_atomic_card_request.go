/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Server to Server Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// CreateAtomicCardRequest struct for CreateAtomicCardRequest
type CreateAtomicCardRequest struct {
	Card Card `json:"card"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

// NewCreateAtomicCardRequest instantiates a new CreateAtomicCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAtomicCardRequest(card Card) *CreateAtomicCardRequest {
	this := CreateAtomicCardRequest{}
	this.Card = card
	return &this
}

// NewCreateAtomicCardRequestWithDefaults instantiates a new CreateAtomicCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAtomicCardRequestWithDefaults() *CreateAtomicCardRequest {
	this := CreateAtomicCardRequest{}
	return &this
}

// GetCard returns the Card field value
func (o *CreateAtomicCardRequest) GetCard() Card {
	if o == nil {
		var ret Card
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *CreateAtomicCardRequest) GetCardOk() (*Card, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *CreateAtomicCardRequest) SetCard(v Card) {
	o.Card = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAtomicCardRequest) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAtomicCardRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateAtomicCardRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateAtomicCardRequest) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o CreateAtomicCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["card"] = o.Card
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAtomicCardRequest struct {
	value *CreateAtomicCardRequest
	isSet bool
}

func (v NullableCreateAtomicCardRequest) Get() *CreateAtomicCardRequest {
	return v.value
}

func (v *NullableCreateAtomicCardRequest) Set(val *CreateAtomicCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAtomicCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAtomicCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAtomicCardRequest(val *CreateAtomicCardRequest) *NullableCreateAtomicCardRequest {
	return &NullableCreateAtomicCardRequest{value: val, isSet: true}
}

func (v NullableCreateAtomicCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAtomicCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


