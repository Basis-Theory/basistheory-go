/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the CreateTenantInvitationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTenantInvitationRequest{}

// CreateTenantInvitationRequest struct for CreateTenantInvitationRequest
type CreateTenantInvitationRequest struct {
	Email string         `json:"email"`
	Role  NullableString `json:"role,omitempty"`
}

// NewCreateTenantInvitationRequest instantiates a new CreateTenantInvitationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantInvitationRequest(email string) *CreateTenantInvitationRequest {
	this := CreateTenantInvitationRequest{}
	this.Email = email
	return &this
}

// NewCreateTenantInvitationRequestWithDefaults instantiates a new CreateTenantInvitationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantInvitationRequestWithDefaults() *CreateTenantInvitationRequest {
	this := CreateTenantInvitationRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateTenantInvitationRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateTenantInvitationRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateTenantInvitationRequest) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTenantInvitationRequest) GetRole() string {
	if o == nil || IsNil(o.Role.Get()) {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantInvitationRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field is not nil.
func (o *CreateTenantInvitationRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *CreateTenantInvitationRequest) SetRole(v string) {
	o.Role.Set(&v)
}

// SetRoleNil sets the value for Role to be an explicit nil
func (o *CreateTenantInvitationRequest) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *CreateTenantInvitationRequest) UnsetRole() {
	o.Role.Unset()
}

func (o CreateTenantInvitationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTenantInvitationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	return toSerialize, nil
}

type NullableCreateTenantInvitationRequest struct {
	value *CreateTenantInvitationRequest
	isSet bool
}

func (v NullableCreateTenantInvitationRequest) Get() *CreateTenantInvitationRequest {
	return v.value
}

func (v *NullableCreateTenantInvitationRequest) Set(val *CreateTenantInvitationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantInvitationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantInvitationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantInvitationRequest(val *CreateTenantInvitationRequest) *NullableCreateTenantInvitationRequest {
	return &NullableCreateTenantInvitationRequest{value: val, isSet: true}
}

func (v NullableCreateTenantInvitationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantInvitationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
