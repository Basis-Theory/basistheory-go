/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the ThreeDSCardholderInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreeDSCardholderInfo{}

// ThreeDSCardholderInfo struct for ThreeDSCardholderInfo
type ThreeDSCardholderInfo struct {
	AccountId                   NullableString                       `json:"account_id,omitempty"`
	AccountType                 NullableString                       `json:"account_type,omitempty"`
	AccountInfo                 *ThreeDSCardholderAccountInfo        `json:"account_info,omitempty"`
	AuthenticationInfo          *ThreeDSCardholderAuthenticationInfo `json:"authentication_info,omitempty"`
	PriorAuthenticationInfo     *ThreeDSPriorAuthenticationInfo      `json:"prior_authentication_info,omitempty"`
	Name                        NullableString                       `json:"name,omitempty"`
	Email                       NullableString                       `json:"email,omitempty"`
	PhoneNumber                 *ThreeDSCardholderPhoneNumber        `json:"phone_number,omitempty"`
	MobilePhoneNumber           *ThreeDSCardholderPhoneNumber        `json:"mobile_phone_number,omitempty"`
	WorkPhoneNumber             *ThreeDSCardholderPhoneNumber        `json:"work_phone_number,omitempty"`
	BillingShippingAddressMatch NullableString                       `json:"billing_shipping_address_match,omitempty"`
	BillingAddress              *ThreeDSAddress                      `json:"billing_address,omitempty"`
	ShippingAddress             *ThreeDSAddress                      `json:"shipping_address,omitempty"`
}

// NewThreeDSCardholderInfo instantiates a new ThreeDSCardholderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSCardholderInfo() *ThreeDSCardholderInfo {
	this := ThreeDSCardholderInfo{}
	return &this
}

// NewThreeDSCardholderInfoWithDefaults instantiates a new ThreeDSCardholderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSCardholderInfoWithDefaults() *ThreeDSCardholderInfo {
	this := ThreeDSCardholderInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderInfo) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderInfo) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *ThreeDSCardholderInfo) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *ThreeDSCardholderInfo) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *ThreeDSCardholderInfo) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAccountType returns the AccountType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderInfo) GetAccountType() string {
	if o == nil || IsNil(o.AccountType.Get()) {
		var ret string
		return ret
	}
	return *o.AccountType.Get()
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderInfo) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountType.Get(), o.AccountType.IsSet()
}

// HasAccountType returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given NullableString and assigns it to the AccountType field.
func (o *ThreeDSCardholderInfo) SetAccountType(v string) {
	o.AccountType.Set(&v)
}

// SetAccountTypeNil sets the value for AccountType to be an explicit nil
func (o *ThreeDSCardholderInfo) SetAccountTypeNil() {
	o.AccountType.Set(nil)
}

// UnsetAccountType ensures that no value is present for AccountType, not even an explicit nil
func (o *ThreeDSCardholderInfo) UnsetAccountType() {
	o.AccountType.Unset()
}

// GetAccountInfo returns the AccountInfo field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetAccountInfo() ThreeDSCardholderAccountInfo {
	if o == nil || IsNil(o.AccountInfo) {
		var ret ThreeDSCardholderAccountInfo
		return ret
	}
	return *o.AccountInfo
}

// GetAccountInfoOk returns a tuple with the AccountInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetAccountInfoOk() (*ThreeDSCardholderAccountInfo, bool) {
	if o == nil || IsNil(o.AccountInfo) {
		return nil, false
	}
	return o.AccountInfo, true
}

// HasAccountInfo returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasAccountInfo() bool {
	if o != nil && !IsNil(o.AccountInfo) {
		return true
	}

	return false
}

// SetAccountInfo gets a reference to the given ThreeDSCardholderAccountInfo and assigns it to the AccountInfo field.
func (o *ThreeDSCardholderInfo) SetAccountInfo(v ThreeDSCardholderAccountInfo) {
	o.AccountInfo = &v
}

// GetAuthenticationInfo returns the AuthenticationInfo field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetAuthenticationInfo() ThreeDSCardholderAuthenticationInfo {
	if o == nil || IsNil(o.AuthenticationInfo) {
		var ret ThreeDSCardholderAuthenticationInfo
		return ret
	}
	return *o.AuthenticationInfo
}

// GetAuthenticationInfoOk returns a tuple with the AuthenticationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetAuthenticationInfoOk() (*ThreeDSCardholderAuthenticationInfo, bool) {
	if o == nil || IsNil(o.AuthenticationInfo) {
		return nil, false
	}
	return o.AuthenticationInfo, true
}

// HasAuthenticationInfo returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasAuthenticationInfo() bool {
	if o != nil && !IsNil(o.AuthenticationInfo) {
		return true
	}

	return false
}

// SetAuthenticationInfo gets a reference to the given ThreeDSCardholderAuthenticationInfo and assigns it to the AuthenticationInfo field.
func (o *ThreeDSCardholderInfo) SetAuthenticationInfo(v ThreeDSCardholderAuthenticationInfo) {
	o.AuthenticationInfo = &v
}

// GetPriorAuthenticationInfo returns the PriorAuthenticationInfo field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetPriorAuthenticationInfo() ThreeDSPriorAuthenticationInfo {
	if o == nil || IsNil(o.PriorAuthenticationInfo) {
		var ret ThreeDSPriorAuthenticationInfo
		return ret
	}
	return *o.PriorAuthenticationInfo
}

// GetPriorAuthenticationInfoOk returns a tuple with the PriorAuthenticationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetPriorAuthenticationInfoOk() (*ThreeDSPriorAuthenticationInfo, bool) {
	if o == nil || IsNil(o.PriorAuthenticationInfo) {
		return nil, false
	}
	return o.PriorAuthenticationInfo, true
}

// HasPriorAuthenticationInfo returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasPriorAuthenticationInfo() bool {
	if o != nil && !IsNil(o.PriorAuthenticationInfo) {
		return true
	}

	return false
}

// SetPriorAuthenticationInfo gets a reference to the given ThreeDSPriorAuthenticationInfo and assigns it to the PriorAuthenticationInfo field.
func (o *ThreeDSCardholderInfo) SetPriorAuthenticationInfo(v ThreeDSPriorAuthenticationInfo) {
	o.PriorAuthenticationInfo = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderInfo) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ThreeDSCardholderInfo) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ThreeDSCardholderInfo) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ThreeDSCardholderInfo) UnsetName() {
	o.Name.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderInfo) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderInfo) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ThreeDSCardholderInfo) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *ThreeDSCardholderInfo) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ThreeDSCardholderInfo) UnsetEmail() {
	o.Email.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetPhoneNumber() ThreeDSCardholderPhoneNumber {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret ThreeDSCardholderPhoneNumber
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetPhoneNumberOk() (*ThreeDSCardholderPhoneNumber, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given ThreeDSCardholderPhoneNumber and assigns it to the PhoneNumber field.
func (o *ThreeDSCardholderInfo) SetPhoneNumber(v ThreeDSCardholderPhoneNumber) {
	o.PhoneNumber = &v
}

// GetMobilePhoneNumber returns the MobilePhoneNumber field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetMobilePhoneNumber() ThreeDSCardholderPhoneNumber {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		var ret ThreeDSCardholderPhoneNumber
		return ret
	}
	return *o.MobilePhoneNumber
}

// GetMobilePhoneNumberOk returns a tuple with the MobilePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetMobilePhoneNumberOk() (*ThreeDSCardholderPhoneNumber, bool) {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		return nil, false
	}
	return o.MobilePhoneNumber, true
}

// HasMobilePhoneNumber returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasMobilePhoneNumber() bool {
	if o != nil && !IsNil(o.MobilePhoneNumber) {
		return true
	}

	return false
}

// SetMobilePhoneNumber gets a reference to the given ThreeDSCardholderPhoneNumber and assigns it to the MobilePhoneNumber field.
func (o *ThreeDSCardholderInfo) SetMobilePhoneNumber(v ThreeDSCardholderPhoneNumber) {
	o.MobilePhoneNumber = &v
}

// GetWorkPhoneNumber returns the WorkPhoneNumber field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetWorkPhoneNumber() ThreeDSCardholderPhoneNumber {
	if o == nil || IsNil(o.WorkPhoneNumber) {
		var ret ThreeDSCardholderPhoneNumber
		return ret
	}
	return *o.WorkPhoneNumber
}

// GetWorkPhoneNumberOk returns a tuple with the WorkPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetWorkPhoneNumberOk() (*ThreeDSCardholderPhoneNumber, bool) {
	if o == nil || IsNil(o.WorkPhoneNumber) {
		return nil, false
	}
	return o.WorkPhoneNumber, true
}

// HasWorkPhoneNumber returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasWorkPhoneNumber() bool {
	if o != nil && !IsNil(o.WorkPhoneNumber) {
		return true
	}

	return false
}

// SetWorkPhoneNumber gets a reference to the given ThreeDSCardholderPhoneNumber and assigns it to the WorkPhoneNumber field.
func (o *ThreeDSCardholderInfo) SetWorkPhoneNumber(v ThreeDSCardholderPhoneNumber) {
	o.WorkPhoneNumber = &v
}

// GetBillingShippingAddressMatch returns the BillingShippingAddressMatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderInfo) GetBillingShippingAddressMatch() string {
	if o == nil || IsNil(o.BillingShippingAddressMatch.Get()) {
		var ret string
		return ret
	}
	return *o.BillingShippingAddressMatch.Get()
}

// GetBillingShippingAddressMatchOk returns a tuple with the BillingShippingAddressMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderInfo) GetBillingShippingAddressMatchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingShippingAddressMatch.Get(), o.BillingShippingAddressMatch.IsSet()
}

// HasBillingShippingAddressMatch returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasBillingShippingAddressMatch() bool {
	if o != nil && !IsNil(o.BillingShippingAddressMatch) {
		return true
	}

	return false
}

// SetBillingShippingAddressMatch gets a reference to the given NullableString and assigns it to the BillingShippingAddressMatch field.
func (o *ThreeDSCardholderInfo) SetBillingShippingAddressMatch(v string) {
	o.BillingShippingAddressMatch.Set(&v)
}

// SetBillingShippingAddressMatchNil sets the value for BillingShippingAddressMatch to be an explicit nil
func (o *ThreeDSCardholderInfo) SetBillingShippingAddressMatchNil() {
	o.BillingShippingAddressMatch.Set(nil)
}

// UnsetBillingShippingAddressMatch ensures that no value is present for BillingShippingAddressMatch, not even an explicit nil
func (o *ThreeDSCardholderInfo) UnsetBillingShippingAddressMatch() {
	o.BillingShippingAddressMatch.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetBillingAddress() ThreeDSAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret ThreeDSAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetBillingAddressOk() (*ThreeDSAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given ThreeDSAddress and assigns it to the BillingAddress field.
func (o *ThreeDSCardholderInfo) SetBillingAddress(v ThreeDSAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *ThreeDSCardholderInfo) GetShippingAddress() ThreeDSAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret ThreeDSAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSCardholderInfo) GetShippingAddressOk() (*ThreeDSAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field is not nil.
func (o *ThreeDSCardholderInfo) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given ThreeDSAddress and assigns it to the ShippingAddress field.
func (o *ThreeDSCardholderInfo) SetShippingAddress(v ThreeDSAddress) {
	o.ShippingAddress = &v
}

func (o ThreeDSCardholderInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreeDSCardholderInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.AccountType.IsSet() {
		toSerialize["account_type"] = o.AccountType.Get()
	}
	if !IsNil(o.AccountInfo) {
		toSerialize["account_info"] = o.AccountInfo
	}
	if !IsNil(o.AuthenticationInfo) {
		toSerialize["authentication_info"] = o.AuthenticationInfo
	}
	if !IsNil(o.PriorAuthenticationInfo) {
		toSerialize["prior_authentication_info"] = o.PriorAuthenticationInfo
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.MobilePhoneNumber) {
		toSerialize["mobile_phone_number"] = o.MobilePhoneNumber
	}
	if !IsNil(o.WorkPhoneNumber) {
		toSerialize["work_phone_number"] = o.WorkPhoneNumber
	}
	if o.BillingShippingAddressMatch.IsSet() {
		toSerialize["billing_shipping_address_match"] = o.BillingShippingAddressMatch.Get()
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billing_address"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shipping_address"] = o.ShippingAddress
	}
	return toSerialize, nil
}

type NullableThreeDSCardholderInfo struct {
	value *ThreeDSCardholderInfo
	isSet bool
}

func (v NullableThreeDSCardholderInfo) Get() *ThreeDSCardholderInfo {
	return v.value
}

func (v *NullableThreeDSCardholderInfo) Set(val *ThreeDSCardholderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSCardholderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSCardholderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSCardholderInfo(val *ThreeDSCardholderInfo) *NullableThreeDSCardholderInfo {
	return &NullableThreeDSCardholderInfo{value: val, isSet: true}
}

func (v NullableThreeDSCardholderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSCardholderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
