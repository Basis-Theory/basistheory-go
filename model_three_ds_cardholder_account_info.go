/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the ThreeDSCardholderAccountInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreeDSCardholderAccountInfo{}

// ThreeDSCardholderAccountInfo struct for ThreeDSCardholderAccountInfo
type ThreeDSCardholderAccountInfo struct {
	AccountAge                 NullableString `json:"account_age,omitempty"`
	AccountLastChanged         NullableString `json:"account_last_changed,omitempty"`
	AccountChangeDate          NullableString `json:"account_change_date,omitempty"`
	AccountCreatedDate         NullableString `json:"account_created_date,omitempty"`
	AccountPwdLastChanged      NullableString `json:"account_pwd_last_changed,omitempty"`
	AccountPwdChangeDate       NullableString `json:"account_pwd_change_date,omitempty"`
	PurchaseCountHalfYear      NullableString `json:"purchase_count_half_year,omitempty"`
	TransactionCountDay        NullableString `json:"transaction_count_day,omitempty"`
	PaymentAccountAge          NullableString `json:"payment_account_age,omitempty"`
	TransactionCountYear       NullableString `json:"transaction_count_year,omitempty"`
	PaymentAccountCreated      NullableString `json:"payment_account_created,omitempty"`
	ShippingAddressFirstUsed   NullableString `json:"shipping_address_first_used,omitempty"`
	ShippingAddressUsageDate   NullableString `json:"shipping_address_usage_date,omitempty"`
	ShippingAccountNameMatch   NullableBool   `json:"shipping_account_name_match,omitempty"`
	SuspiciousActivityObserved NullableBool   `json:"suspicious_activity_observed,omitempty"`
}

// NewThreeDSCardholderAccountInfo instantiates a new ThreeDSCardholderAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSCardholderAccountInfo() *ThreeDSCardholderAccountInfo {
	this := ThreeDSCardholderAccountInfo{}
	return &this
}

// NewThreeDSCardholderAccountInfoWithDefaults instantiates a new ThreeDSCardholderAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSCardholderAccountInfoWithDefaults() *ThreeDSCardholderAccountInfo {
	this := ThreeDSCardholderAccountInfo{}
	return &this
}

// GetAccountAge returns the AccountAge field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountAge() string {
	if o == nil || IsNil(o.AccountAge.Get()) {
		var ret string
		return ret
	}
	return *o.AccountAge.Get()
}

// GetAccountAgeOk returns a tuple with the AccountAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountAge.Get(), o.AccountAge.IsSet()
}

// HasAccountAge returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountAge() bool {
	if o != nil && !IsNil(o.AccountAge) {
		return true
	}

	return false
}

// SetAccountAge gets a reference to the given NullableString and assigns it to the AccountAge field.
func (o *ThreeDSCardholderAccountInfo) SetAccountAge(v string) {
	o.AccountAge.Set(&v)
}

// SetAccountAgeNil sets the value for AccountAge to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountAgeNil() {
	o.AccountAge.Set(nil)
}

// UnsetAccountAge ensures that no value is present for AccountAge, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountAge() {
	o.AccountAge.Unset()
}

// GetAccountLastChanged returns the AccountLastChanged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountLastChanged() string {
	if o == nil || IsNil(o.AccountLastChanged.Get()) {
		var ret string
		return ret
	}
	return *o.AccountLastChanged.Get()
}

// GetAccountLastChangedOk returns a tuple with the AccountLastChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountLastChangedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountLastChanged.Get(), o.AccountLastChanged.IsSet()
}

// HasAccountLastChanged returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountLastChanged() bool {
	if o != nil && !IsNil(o.AccountLastChanged) {
		return true
	}

	return false
}

// SetAccountLastChanged gets a reference to the given NullableString and assigns it to the AccountLastChanged field.
func (o *ThreeDSCardholderAccountInfo) SetAccountLastChanged(v string) {
	o.AccountLastChanged.Set(&v)
}

// SetAccountLastChangedNil sets the value for AccountLastChanged to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountLastChangedNil() {
	o.AccountLastChanged.Set(nil)
}

// UnsetAccountLastChanged ensures that no value is present for AccountLastChanged, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountLastChanged() {
	o.AccountLastChanged.Unset()
}

// GetAccountChangeDate returns the AccountChangeDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountChangeDate() string {
	if o == nil || IsNil(o.AccountChangeDate.Get()) {
		var ret string
		return ret
	}
	return *o.AccountChangeDate.Get()
}

// GetAccountChangeDateOk returns a tuple with the AccountChangeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountChangeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountChangeDate.Get(), o.AccountChangeDate.IsSet()
}

// HasAccountChangeDate returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountChangeDate() bool {
	if o != nil && !IsNil(o.AccountChangeDate) {
		return true
	}

	return false
}

// SetAccountChangeDate gets a reference to the given NullableString and assigns it to the AccountChangeDate field.
func (o *ThreeDSCardholderAccountInfo) SetAccountChangeDate(v string) {
	o.AccountChangeDate.Set(&v)
}

// SetAccountChangeDateNil sets the value for AccountChangeDate to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountChangeDateNil() {
	o.AccountChangeDate.Set(nil)
}

// UnsetAccountChangeDate ensures that no value is present for AccountChangeDate, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountChangeDate() {
	o.AccountChangeDate.Unset()
}

// GetAccountCreatedDate returns the AccountCreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountCreatedDate() string {
	if o == nil || IsNil(o.AccountCreatedDate.Get()) {
		var ret string
		return ret
	}
	return *o.AccountCreatedDate.Get()
}

// GetAccountCreatedDateOk returns a tuple with the AccountCreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountCreatedDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountCreatedDate.Get(), o.AccountCreatedDate.IsSet()
}

// HasAccountCreatedDate returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountCreatedDate() bool {
	if o != nil && !IsNil(o.AccountCreatedDate) {
		return true
	}

	return false
}

// SetAccountCreatedDate gets a reference to the given NullableString and assigns it to the AccountCreatedDate field.
func (o *ThreeDSCardholderAccountInfo) SetAccountCreatedDate(v string) {
	o.AccountCreatedDate.Set(&v)
}

// SetAccountCreatedDateNil sets the value for AccountCreatedDate to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountCreatedDateNil() {
	o.AccountCreatedDate.Set(nil)
}

// UnsetAccountCreatedDate ensures that no value is present for AccountCreatedDate, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountCreatedDate() {
	o.AccountCreatedDate.Unset()
}

// GetAccountPwdLastChanged returns the AccountPwdLastChanged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountPwdLastChanged() string {
	if o == nil || IsNil(o.AccountPwdLastChanged.Get()) {
		var ret string
		return ret
	}
	return *o.AccountPwdLastChanged.Get()
}

// GetAccountPwdLastChangedOk returns a tuple with the AccountPwdLastChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountPwdLastChangedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountPwdLastChanged.Get(), o.AccountPwdLastChanged.IsSet()
}

// HasAccountPwdLastChanged returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountPwdLastChanged() bool {
	if o != nil && !IsNil(o.AccountPwdLastChanged) {
		return true
	}

	return false
}

// SetAccountPwdLastChanged gets a reference to the given NullableString and assigns it to the AccountPwdLastChanged field.
func (o *ThreeDSCardholderAccountInfo) SetAccountPwdLastChanged(v string) {
	o.AccountPwdLastChanged.Set(&v)
}

// SetAccountPwdLastChangedNil sets the value for AccountPwdLastChanged to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountPwdLastChangedNil() {
	o.AccountPwdLastChanged.Set(nil)
}

// UnsetAccountPwdLastChanged ensures that no value is present for AccountPwdLastChanged, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountPwdLastChanged() {
	o.AccountPwdLastChanged.Unset()
}

// GetAccountPwdChangeDate returns the AccountPwdChangeDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetAccountPwdChangeDate() string {
	if o == nil || IsNil(o.AccountPwdChangeDate.Get()) {
		var ret string
		return ret
	}
	return *o.AccountPwdChangeDate.Get()
}

// GetAccountPwdChangeDateOk returns a tuple with the AccountPwdChangeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetAccountPwdChangeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountPwdChangeDate.Get(), o.AccountPwdChangeDate.IsSet()
}

// HasAccountPwdChangeDate returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasAccountPwdChangeDate() bool {
	if o != nil && !IsNil(o.AccountPwdChangeDate) {
		return true
	}

	return false
}

// SetAccountPwdChangeDate gets a reference to the given NullableString and assigns it to the AccountPwdChangeDate field.
func (o *ThreeDSCardholderAccountInfo) SetAccountPwdChangeDate(v string) {
	o.AccountPwdChangeDate.Set(&v)
}

// SetAccountPwdChangeDateNil sets the value for AccountPwdChangeDate to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetAccountPwdChangeDateNil() {
	o.AccountPwdChangeDate.Set(nil)
}

// UnsetAccountPwdChangeDate ensures that no value is present for AccountPwdChangeDate, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetAccountPwdChangeDate() {
	o.AccountPwdChangeDate.Unset()
}

// GetPurchaseCountHalfYear returns the PurchaseCountHalfYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetPurchaseCountHalfYear() string {
	if o == nil || IsNil(o.PurchaseCountHalfYear.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseCountHalfYear.Get()
}

// GetPurchaseCountHalfYearOk returns a tuple with the PurchaseCountHalfYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetPurchaseCountHalfYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseCountHalfYear.Get(), o.PurchaseCountHalfYear.IsSet()
}

// HasPurchaseCountHalfYear returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasPurchaseCountHalfYear() bool {
	if o != nil && !IsNil(o.PurchaseCountHalfYear) {
		return true
	}

	return false
}

// SetPurchaseCountHalfYear gets a reference to the given NullableString and assigns it to the PurchaseCountHalfYear field.
func (o *ThreeDSCardholderAccountInfo) SetPurchaseCountHalfYear(v string) {
	o.PurchaseCountHalfYear.Set(&v)
}

// SetPurchaseCountHalfYearNil sets the value for PurchaseCountHalfYear to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetPurchaseCountHalfYearNil() {
	o.PurchaseCountHalfYear.Set(nil)
}

// UnsetPurchaseCountHalfYear ensures that no value is present for PurchaseCountHalfYear, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetPurchaseCountHalfYear() {
	o.PurchaseCountHalfYear.Unset()
}

// GetTransactionCountDay returns the TransactionCountDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetTransactionCountDay() string {
	if o == nil || IsNil(o.TransactionCountDay.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionCountDay.Get()
}

// GetTransactionCountDayOk returns a tuple with the TransactionCountDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetTransactionCountDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionCountDay.Get(), o.TransactionCountDay.IsSet()
}

// HasTransactionCountDay returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasTransactionCountDay() bool {
	if o != nil && !IsNil(o.TransactionCountDay) {
		return true
	}

	return false
}

// SetTransactionCountDay gets a reference to the given NullableString and assigns it to the TransactionCountDay field.
func (o *ThreeDSCardholderAccountInfo) SetTransactionCountDay(v string) {
	o.TransactionCountDay.Set(&v)
}

// SetTransactionCountDayNil sets the value for TransactionCountDay to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetTransactionCountDayNil() {
	o.TransactionCountDay.Set(nil)
}

// UnsetTransactionCountDay ensures that no value is present for TransactionCountDay, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetTransactionCountDay() {
	o.TransactionCountDay.Unset()
}

// GetPaymentAccountAge returns the PaymentAccountAge field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetPaymentAccountAge() string {
	if o == nil || IsNil(o.PaymentAccountAge.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentAccountAge.Get()
}

// GetPaymentAccountAgeOk returns a tuple with the PaymentAccountAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetPaymentAccountAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentAccountAge.Get(), o.PaymentAccountAge.IsSet()
}

// HasPaymentAccountAge returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasPaymentAccountAge() bool {
	if o != nil && !IsNil(o.PaymentAccountAge) {
		return true
	}

	return false
}

// SetPaymentAccountAge gets a reference to the given NullableString and assigns it to the PaymentAccountAge field.
func (o *ThreeDSCardholderAccountInfo) SetPaymentAccountAge(v string) {
	o.PaymentAccountAge.Set(&v)
}

// SetPaymentAccountAgeNil sets the value for PaymentAccountAge to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetPaymentAccountAgeNil() {
	o.PaymentAccountAge.Set(nil)
}

// UnsetPaymentAccountAge ensures that no value is present for PaymentAccountAge, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetPaymentAccountAge() {
	o.PaymentAccountAge.Unset()
}

// GetTransactionCountYear returns the TransactionCountYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetTransactionCountYear() string {
	if o == nil || IsNil(o.TransactionCountYear.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionCountYear.Get()
}

// GetTransactionCountYearOk returns a tuple with the TransactionCountYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetTransactionCountYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionCountYear.Get(), o.TransactionCountYear.IsSet()
}

// HasTransactionCountYear returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasTransactionCountYear() bool {
	if o != nil && !IsNil(o.TransactionCountYear) {
		return true
	}

	return false
}

// SetTransactionCountYear gets a reference to the given NullableString and assigns it to the TransactionCountYear field.
func (o *ThreeDSCardholderAccountInfo) SetTransactionCountYear(v string) {
	o.TransactionCountYear.Set(&v)
}

// SetTransactionCountYearNil sets the value for TransactionCountYear to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetTransactionCountYearNil() {
	o.TransactionCountYear.Set(nil)
}

// UnsetTransactionCountYear ensures that no value is present for TransactionCountYear, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetTransactionCountYear() {
	o.TransactionCountYear.Unset()
}

// GetPaymentAccountCreated returns the PaymentAccountCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetPaymentAccountCreated() string {
	if o == nil || IsNil(o.PaymentAccountCreated.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentAccountCreated.Get()
}

// GetPaymentAccountCreatedOk returns a tuple with the PaymentAccountCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetPaymentAccountCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentAccountCreated.Get(), o.PaymentAccountCreated.IsSet()
}

// HasPaymentAccountCreated returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasPaymentAccountCreated() bool {
	if o != nil && !IsNil(o.PaymentAccountCreated) {
		return true
	}

	return false
}

// SetPaymentAccountCreated gets a reference to the given NullableString and assigns it to the PaymentAccountCreated field.
func (o *ThreeDSCardholderAccountInfo) SetPaymentAccountCreated(v string) {
	o.PaymentAccountCreated.Set(&v)
}

// SetPaymentAccountCreatedNil sets the value for PaymentAccountCreated to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetPaymentAccountCreatedNil() {
	o.PaymentAccountCreated.Set(nil)
}

// UnsetPaymentAccountCreated ensures that no value is present for PaymentAccountCreated, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetPaymentAccountCreated() {
	o.PaymentAccountCreated.Unset()
}

// GetShippingAddressFirstUsed returns the ShippingAddressFirstUsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetShippingAddressFirstUsed() string {
	if o == nil || IsNil(o.ShippingAddressFirstUsed.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingAddressFirstUsed.Get()
}

// GetShippingAddressFirstUsedOk returns a tuple with the ShippingAddressFirstUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetShippingAddressFirstUsedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingAddressFirstUsed.Get(), o.ShippingAddressFirstUsed.IsSet()
}

// HasShippingAddressFirstUsed returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasShippingAddressFirstUsed() bool {
	if o != nil && !IsNil(o.ShippingAddressFirstUsed) {
		return true
	}

	return false
}

// SetShippingAddressFirstUsed gets a reference to the given NullableString and assigns it to the ShippingAddressFirstUsed field.
func (o *ThreeDSCardholderAccountInfo) SetShippingAddressFirstUsed(v string) {
	o.ShippingAddressFirstUsed.Set(&v)
}

// SetShippingAddressFirstUsedNil sets the value for ShippingAddressFirstUsed to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetShippingAddressFirstUsedNil() {
	o.ShippingAddressFirstUsed.Set(nil)
}

// UnsetShippingAddressFirstUsed ensures that no value is present for ShippingAddressFirstUsed, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetShippingAddressFirstUsed() {
	o.ShippingAddressFirstUsed.Unset()
}

// GetShippingAddressUsageDate returns the ShippingAddressUsageDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetShippingAddressUsageDate() string {
	if o == nil || IsNil(o.ShippingAddressUsageDate.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingAddressUsageDate.Get()
}

// GetShippingAddressUsageDateOk returns a tuple with the ShippingAddressUsageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetShippingAddressUsageDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingAddressUsageDate.Get(), o.ShippingAddressUsageDate.IsSet()
}

// HasShippingAddressUsageDate returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasShippingAddressUsageDate() bool {
	if o != nil && !IsNil(o.ShippingAddressUsageDate) {
		return true
	}

	return false
}

// SetShippingAddressUsageDate gets a reference to the given NullableString and assigns it to the ShippingAddressUsageDate field.
func (o *ThreeDSCardholderAccountInfo) SetShippingAddressUsageDate(v string) {
	o.ShippingAddressUsageDate.Set(&v)
}

// SetShippingAddressUsageDateNil sets the value for ShippingAddressUsageDate to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetShippingAddressUsageDateNil() {
	o.ShippingAddressUsageDate.Set(nil)
}

// UnsetShippingAddressUsageDate ensures that no value is present for ShippingAddressUsageDate, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetShippingAddressUsageDate() {
	o.ShippingAddressUsageDate.Unset()
}

// GetShippingAccountNameMatch returns the ShippingAccountNameMatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetShippingAccountNameMatch() bool {
	if o == nil || IsNil(o.ShippingAccountNameMatch.Get()) {
		var ret bool
		return ret
	}
	return *o.ShippingAccountNameMatch.Get()
}

// GetShippingAccountNameMatchOk returns a tuple with the ShippingAccountNameMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetShippingAccountNameMatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingAccountNameMatch.Get(), o.ShippingAccountNameMatch.IsSet()
}

// HasShippingAccountNameMatch returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasShippingAccountNameMatch() bool {
	if o != nil && !IsNil(o.ShippingAccountNameMatch) {
		return true
	}

	return false
}

// SetShippingAccountNameMatch gets a reference to the given NullableBool and assigns it to the ShippingAccountNameMatch field.
func (o *ThreeDSCardholderAccountInfo) SetShippingAccountNameMatch(v bool) {
	o.ShippingAccountNameMatch.Set(&v)
}

// SetShippingAccountNameMatchNil sets the value for ShippingAccountNameMatch to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetShippingAccountNameMatchNil() {
	o.ShippingAccountNameMatch.Set(nil)
}

// UnsetShippingAccountNameMatch ensures that no value is present for ShippingAccountNameMatch, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetShippingAccountNameMatch() {
	o.ShippingAccountNameMatch.Unset()
}

// GetSuspiciousActivityObserved returns the SuspiciousActivityObserved field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreeDSCardholderAccountInfo) GetSuspiciousActivityObserved() bool {
	if o == nil || IsNil(o.SuspiciousActivityObserved.Get()) {
		var ret bool
		return ret
	}
	return *o.SuspiciousActivityObserved.Get()
}

// GetSuspiciousActivityObservedOk returns a tuple with the SuspiciousActivityObserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreeDSCardholderAccountInfo) GetSuspiciousActivityObservedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuspiciousActivityObserved.Get(), o.SuspiciousActivityObserved.IsSet()
}

// HasSuspiciousActivityObserved returns a boolean if a field is not nil.
func (o *ThreeDSCardholderAccountInfo) HasSuspiciousActivityObserved() bool {
	if o != nil && !IsNil(o.SuspiciousActivityObserved) {
		return true
	}

	return false
}

// SetSuspiciousActivityObserved gets a reference to the given NullableBool and assigns it to the SuspiciousActivityObserved field.
func (o *ThreeDSCardholderAccountInfo) SetSuspiciousActivityObserved(v bool) {
	o.SuspiciousActivityObserved.Set(&v)
}

// SetSuspiciousActivityObservedNil sets the value for SuspiciousActivityObserved to be an explicit nil
func (o *ThreeDSCardholderAccountInfo) SetSuspiciousActivityObservedNil() {
	o.SuspiciousActivityObserved.Set(nil)
}

// UnsetSuspiciousActivityObserved ensures that no value is present for SuspiciousActivityObserved, not even an explicit nil
func (o *ThreeDSCardholderAccountInfo) UnsetSuspiciousActivityObserved() {
	o.SuspiciousActivityObserved.Unset()
}

func (o ThreeDSCardholderAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreeDSCardholderAccountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountAge.IsSet() {
		toSerialize["account_age"] = o.AccountAge.Get()
	}
	if o.AccountLastChanged.IsSet() {
		toSerialize["account_last_changed"] = o.AccountLastChanged.Get()
	}
	if o.AccountChangeDate.IsSet() {
		toSerialize["account_change_date"] = o.AccountChangeDate.Get()
	}
	if o.AccountCreatedDate.IsSet() {
		toSerialize["account_created_date"] = o.AccountCreatedDate.Get()
	}
	if o.AccountPwdLastChanged.IsSet() {
		toSerialize["account_pwd_last_changed"] = o.AccountPwdLastChanged.Get()
	}
	if o.AccountPwdChangeDate.IsSet() {
		toSerialize["account_pwd_change_date"] = o.AccountPwdChangeDate.Get()
	}
	if o.PurchaseCountHalfYear.IsSet() {
		toSerialize["purchase_count_half_year"] = o.PurchaseCountHalfYear.Get()
	}
	if o.TransactionCountDay.IsSet() {
		toSerialize["transaction_count_day"] = o.TransactionCountDay.Get()
	}
	if o.PaymentAccountAge.IsSet() {
		toSerialize["payment_account_age"] = o.PaymentAccountAge.Get()
	}
	if o.TransactionCountYear.IsSet() {
		toSerialize["transaction_count_year"] = o.TransactionCountYear.Get()
	}
	if o.PaymentAccountCreated.IsSet() {
		toSerialize["payment_account_created"] = o.PaymentAccountCreated.Get()
	}
	if o.ShippingAddressFirstUsed.IsSet() {
		toSerialize["shipping_address_first_used"] = o.ShippingAddressFirstUsed.Get()
	}
	if o.ShippingAddressUsageDate.IsSet() {
		toSerialize["shipping_address_usage_date"] = o.ShippingAddressUsageDate.Get()
	}
	if o.ShippingAccountNameMatch.IsSet() {
		toSerialize["shipping_account_name_match"] = o.ShippingAccountNameMatch.Get()
	}
	if o.SuspiciousActivityObserved.IsSet() {
		toSerialize["suspicious_activity_observed"] = o.SuspiciousActivityObserved.Get()
	}
	return toSerialize, nil
}

type NullableThreeDSCardholderAccountInfo struct {
	value *ThreeDSCardholderAccountInfo
	isSet bool
}

func (v NullableThreeDSCardholderAccountInfo) Get() *ThreeDSCardholderAccountInfo {
	return v.value
}

func (v *NullableThreeDSCardholderAccountInfo) Set(val *ThreeDSCardholderAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSCardholderAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSCardholderAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSCardholderAccountInfo(val *ThreeDSCardholderAccountInfo) *NullableThreeDSCardholderAccountInfo {
	return &NullableThreeDSCardholderAccountInfo{value: val, isSet: true}
}

func (v NullableThreeDSCardholderAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSCardholderAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
