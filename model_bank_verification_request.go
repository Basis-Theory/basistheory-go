/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the BankVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankVerificationRequest{}

// BankVerificationRequest struct for BankVerificationRequest
type BankVerificationRequest struct {
	TokenId       string         `json:"token_id"`
	CountryCode   NullableString `json:"country_code,omitempty"`
	RoutingNumber NullableString `json:"routing_number,omitempty"`
}

// NewBankVerificationRequest instantiates a new BankVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankVerificationRequest(tokenId string) *BankVerificationRequest {
	this := BankVerificationRequest{}
	this.TokenId = tokenId
	return &this
}

// NewBankVerificationRequestWithDefaults instantiates a new BankVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankVerificationRequestWithDefaults() *BankVerificationRequest {
	this := BankVerificationRequest{}
	return &this
}

// GetTokenId returns the TokenId field value
func (o *BankVerificationRequest) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *BankVerificationRequest) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *BankVerificationRequest) SetTokenId(v string) {
	o.TokenId = v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankVerificationRequest) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankVerificationRequest) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field is not nil.
func (o *BankVerificationRequest) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *BankVerificationRequest) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}

// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *BankVerificationRequest) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *BankVerificationRequest) UnsetCountryCode() {
	o.CountryCode.Unset()
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankVerificationRequest) GetRoutingNumber() string {
	if o == nil || IsNil(o.RoutingNumber.Get()) {
		var ret string
		return ret
	}
	return *o.RoutingNumber.Get()
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankVerificationRequest) GetRoutingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoutingNumber.Get(), o.RoutingNumber.IsSet()
}

// HasRoutingNumber returns a boolean if a field is not nil.
func (o *BankVerificationRequest) HasRoutingNumber() bool {
	if o != nil && !IsNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given NullableString and assigns it to the RoutingNumber field.
func (o *BankVerificationRequest) SetRoutingNumber(v string) {
	o.RoutingNumber.Set(&v)
}

// SetRoutingNumberNil sets the value for RoutingNumber to be an explicit nil
func (o *BankVerificationRequest) SetRoutingNumberNil() {
	o.RoutingNumber.Set(nil)
}

// UnsetRoutingNumber ensures that no value is present for RoutingNumber, not even an explicit nil
func (o *BankVerificationRequest) UnsetRoutingNumber() {
	o.RoutingNumber.Unset()
}

func (o BankVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token_id"] = o.TokenId
	if o.CountryCode.IsSet() {
		toSerialize["country_code"] = o.CountryCode.Get()
	}
	if o.RoutingNumber.IsSet() {
		toSerialize["routing_number"] = o.RoutingNumber.Get()
	}
	return toSerialize, nil
}

type NullableBankVerificationRequest struct {
	value *BankVerificationRequest
	isSet bool
}

func (v NullableBankVerificationRequest) Get() *BankVerificationRequest {
	return v.value
}

func (v *NullableBankVerificationRequest) Set(val *BankVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBankVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBankVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankVerificationRequest(val *BankVerificationRequest) *NullableBankVerificationRequest {
	return &NullableBankVerificationRequest{value: val, isSet: true}
}

func (v NullableBankVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
