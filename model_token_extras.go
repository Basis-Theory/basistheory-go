/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the TokenExtras type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenExtras{}

// TokenExtras struct for TokenExtras
type TokenExtras struct {
	Deduplicated *bool `json:"deduplicated,omitempty"`
}

// NewTokenExtras instantiates a new TokenExtras object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenExtras() *TokenExtras {
	this := TokenExtras{}
	return &this
}

// NewTokenExtrasWithDefaults instantiates a new TokenExtras object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenExtrasWithDefaults() *TokenExtras {
	this := TokenExtras{}
	return &this
}

// GetDeduplicated returns the Deduplicated field value if set, zero value otherwise.
func (o *TokenExtras) GetDeduplicated() bool {
	if o == nil || IsNil(o.Deduplicated) {
		var ret bool
		return ret
	}
	return *o.Deduplicated
}

// GetDeduplicatedOk returns a tuple with the Deduplicated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenExtras) GetDeduplicatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deduplicated) {
		return nil, false
	}
	return o.Deduplicated, true
}

// HasDeduplicated returns a boolean if a field is not nil.
func (o *TokenExtras) HasDeduplicated() bool {
	if o != nil && !IsNil(o.Deduplicated) {
		return true
	}

	return false
}

// SetDeduplicated gets a reference to the given bool and assigns it to the Deduplicated field.
func (o *TokenExtras) SetDeduplicated(v bool) {
	o.Deduplicated = &v
}

func (o TokenExtras) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenExtras) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deduplicated) {
		toSerialize["deduplicated"] = o.Deduplicated
	}
	return toSerialize, nil
}

type NullableTokenExtras struct {
	value *TokenExtras
	isSet bool
}

func (v NullableTokenExtras) Get() *TokenExtras {
	return v.value
}

func (v *NullableTokenExtras) Set(val *TokenExtras) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenExtras) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenExtras) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenExtras(val *TokenExtras) *NullableTokenExtras {
	return &NullableTokenExtras{value: val, isSet: true}
}

func (v NullableTokenExtras) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenExtras) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
