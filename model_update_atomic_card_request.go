/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Server to Server Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// UpdateAtomicCardRequest struct for UpdateAtomicCardRequest
type UpdateAtomicCardRequest struct {
	Card Card `json:"card"`
}

// NewUpdateAtomicCardRequest instantiates a new UpdateAtomicCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAtomicCardRequest(card Card) *UpdateAtomicCardRequest {
	this := UpdateAtomicCardRequest{}
	this.Card = card
	return &this
}

// NewUpdateAtomicCardRequestWithDefaults instantiates a new UpdateAtomicCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAtomicCardRequestWithDefaults() *UpdateAtomicCardRequest {
	this := UpdateAtomicCardRequest{}
	return &this
}

// GetCard returns the Card field value
func (o *UpdateAtomicCardRequest) GetCard() Card {
	if o == nil {
		var ret Card
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *UpdateAtomicCardRequest) GetCardOk() (*Card, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *UpdateAtomicCardRequest) SetCard(v Card) {
	o.Card = v
}

func (o UpdateAtomicCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["card"] = o.Card
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAtomicCardRequest struct {
	value *UpdateAtomicCardRequest
	isSet bool
}

func (v NullableUpdateAtomicCardRequest) Get() *UpdateAtomicCardRequest {
	return v.value
}

func (v *NullableUpdateAtomicCardRequest) Set(val *UpdateAtomicCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAtomicCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAtomicCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAtomicCardRequest(val *UpdateAtomicCardRequest) *NullableUpdateAtomicCardRequest {
	return &NullableUpdateAtomicCardRequest{value: val, isSet: true}
}

func (v NullableUpdateAtomicCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAtomicCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
