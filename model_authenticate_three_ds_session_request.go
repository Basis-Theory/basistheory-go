/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the AuthenticateThreeDSSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticateThreeDSSessionRequest{}

// AuthenticateThreeDSSessionRequest struct for AuthenticateThreeDSSessionRequest
type AuthenticateThreeDSSessionRequest struct {
	AuthenticationCategory string                    `json:"authentication_category"`
	AuthenticationType     string                    `json:"authentication_type"`
	ChallengePreference    NullableString            `json:"challenge_preference,omitempty"`
	PurchaseInfo           *ThreeDSPurchaseInfo      `json:"purchase_info,omitempty"`
	MerchantInfo           *ThreeDSMerchantInfo      `json:"merchant_info,omitempty"`
	RequestorInfo          ThreeDSRequestorInfo      `json:"requestor_info"`
	CardholderInfo         *ThreeDSCardholderInfo    `json:"cardholder_info,omitempty"`
	BroadcastInfo          interface{}               `json:"broadcast_info,omitempty"`
	MessageExtensions      []ThreeDSMessageExtension `json:"message_extensions,omitempty"`
}

// NewAuthenticateThreeDSSessionRequest instantiates a new AuthenticateThreeDSSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticateThreeDSSessionRequest(authenticationCategory string, authenticationType string, requestorInfo ThreeDSRequestorInfo) *AuthenticateThreeDSSessionRequest {
	this := AuthenticateThreeDSSessionRequest{}
	this.AuthenticationCategory = authenticationCategory
	this.AuthenticationType = authenticationType
	this.RequestorInfo = requestorInfo
	return &this
}

// NewAuthenticateThreeDSSessionRequestWithDefaults instantiates a new AuthenticateThreeDSSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticateThreeDSSessionRequestWithDefaults() *AuthenticateThreeDSSessionRequest {
	this := AuthenticateThreeDSSessionRequest{}
	return &this
}

// GetAuthenticationCategory returns the AuthenticationCategory field value
func (o *AuthenticateThreeDSSessionRequest) GetAuthenticationCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationCategory
}

// GetAuthenticationCategoryOk returns a tuple with the AuthenticationCategory field value
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetAuthenticationCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationCategory, true
}

// SetAuthenticationCategory sets field value
func (o *AuthenticateThreeDSSessionRequest) SetAuthenticationCategory(v string) {
	o.AuthenticationCategory = v
}

// GetAuthenticationType returns the AuthenticationType field value
func (o *AuthenticateThreeDSSessionRequest) GetAuthenticationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationType, true
}

// SetAuthenticationType sets field value
func (o *AuthenticateThreeDSSessionRequest) SetAuthenticationType(v string) {
	o.AuthenticationType = v
}

// GetChallengePreference returns the ChallengePreference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticateThreeDSSessionRequest) GetChallengePreference() string {
	if o == nil || IsNil(o.ChallengePreference.Get()) {
		var ret string
		return ret
	}
	return *o.ChallengePreference.Get()
}

// GetChallengePreferenceOk returns a tuple with the ChallengePreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticateThreeDSSessionRequest) GetChallengePreferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChallengePreference.Get(), o.ChallengePreference.IsSet()
}

// HasChallengePreference returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasChallengePreference() bool {
	if o != nil && !IsNil(o.ChallengePreference) {
		return true
	}

	return false
}

// SetChallengePreference gets a reference to the given NullableString and assigns it to the ChallengePreference field.
func (o *AuthenticateThreeDSSessionRequest) SetChallengePreference(v string) {
	o.ChallengePreference.Set(&v)
}

// SetChallengePreferenceNil sets the value for ChallengePreference to be an explicit nil
func (o *AuthenticateThreeDSSessionRequest) SetChallengePreferenceNil() {
	o.ChallengePreference.Set(nil)
}

// UnsetChallengePreference ensures that no value is present for ChallengePreference, not even an explicit nil
func (o *AuthenticateThreeDSSessionRequest) UnsetChallengePreference() {
	o.ChallengePreference.Unset()
}

// GetPurchaseInfo returns the PurchaseInfo field value if set, zero value otherwise.
func (o *AuthenticateThreeDSSessionRequest) GetPurchaseInfo() ThreeDSPurchaseInfo {
	if o == nil || IsNil(o.PurchaseInfo) {
		var ret ThreeDSPurchaseInfo
		return ret
	}
	return *o.PurchaseInfo
}

// GetPurchaseInfoOk returns a tuple with the PurchaseInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetPurchaseInfoOk() (*ThreeDSPurchaseInfo, bool) {
	if o == nil || IsNil(o.PurchaseInfo) {
		return nil, false
	}
	return o.PurchaseInfo, true
}

// HasPurchaseInfo returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasPurchaseInfo() bool {
	if o != nil && !IsNil(o.PurchaseInfo) {
		return true
	}

	return false
}

// SetPurchaseInfo gets a reference to the given ThreeDSPurchaseInfo and assigns it to the PurchaseInfo field.
func (o *AuthenticateThreeDSSessionRequest) SetPurchaseInfo(v ThreeDSPurchaseInfo) {
	o.PurchaseInfo = &v
}

// GetMerchantInfo returns the MerchantInfo field value if set, zero value otherwise.
func (o *AuthenticateThreeDSSessionRequest) GetMerchantInfo() ThreeDSMerchantInfo {
	if o == nil || IsNil(o.MerchantInfo) {
		var ret ThreeDSMerchantInfo
		return ret
	}
	return *o.MerchantInfo
}

// GetMerchantInfoOk returns a tuple with the MerchantInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetMerchantInfoOk() (*ThreeDSMerchantInfo, bool) {
	if o == nil || IsNil(o.MerchantInfo) {
		return nil, false
	}
	return o.MerchantInfo, true
}

// HasMerchantInfo returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasMerchantInfo() bool {
	if o != nil && !IsNil(o.MerchantInfo) {
		return true
	}

	return false
}

// SetMerchantInfo gets a reference to the given ThreeDSMerchantInfo and assigns it to the MerchantInfo field.
func (o *AuthenticateThreeDSSessionRequest) SetMerchantInfo(v ThreeDSMerchantInfo) {
	o.MerchantInfo = &v
}

// GetRequestorInfo returns the RequestorInfo field value
func (o *AuthenticateThreeDSSessionRequest) GetRequestorInfo() ThreeDSRequestorInfo {
	if o == nil {
		var ret ThreeDSRequestorInfo
		return ret
	}

	return o.RequestorInfo
}

// GetRequestorInfoOk returns a tuple with the RequestorInfo field value
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetRequestorInfoOk() (*ThreeDSRequestorInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestorInfo, true
}

// SetRequestorInfo sets field value
func (o *AuthenticateThreeDSSessionRequest) SetRequestorInfo(v ThreeDSRequestorInfo) {
	o.RequestorInfo = v
}

// GetCardholderInfo returns the CardholderInfo field value if set, zero value otherwise.
func (o *AuthenticateThreeDSSessionRequest) GetCardholderInfo() ThreeDSCardholderInfo {
	if o == nil || IsNil(o.CardholderInfo) {
		var ret ThreeDSCardholderInfo
		return ret
	}
	return *o.CardholderInfo
}

// GetCardholderInfoOk returns a tuple with the CardholderInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateThreeDSSessionRequest) GetCardholderInfoOk() (*ThreeDSCardholderInfo, bool) {
	if o == nil || IsNil(o.CardholderInfo) {
		return nil, false
	}
	return o.CardholderInfo, true
}

// HasCardholderInfo returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasCardholderInfo() bool {
	if o != nil && !IsNil(o.CardholderInfo) {
		return true
	}

	return false
}

// SetCardholderInfo gets a reference to the given ThreeDSCardholderInfo and assigns it to the CardholderInfo field.
func (o *AuthenticateThreeDSSessionRequest) SetCardholderInfo(v ThreeDSCardholderInfo) {
	o.CardholderInfo = &v
}

// GetBroadcastInfo returns the BroadcastInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticateThreeDSSessionRequest) GetBroadcastInfo() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BroadcastInfo
}

// GetBroadcastInfoOk returns a tuple with the BroadcastInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticateThreeDSSessionRequest) GetBroadcastInfoOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BroadcastInfo) {
		return nil, false
	}
	return &o.BroadcastInfo, true
}

// HasBroadcastInfo returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasBroadcastInfo() bool {
	if o != nil && !IsNil(o.BroadcastInfo) {
		return true
	}

	return false
}

// SetBroadcastInfo gets a reference to the given interface{} and assigns it to the BroadcastInfo field.
func (o *AuthenticateThreeDSSessionRequest) SetBroadcastInfo(v interface{}) {
	o.BroadcastInfo = v
}

// GetMessageExtensions returns the MessageExtensions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticateThreeDSSessionRequest) GetMessageExtensions() []ThreeDSMessageExtension {
	if o == nil {
		var ret []ThreeDSMessageExtension
		return ret
	}
	return o.MessageExtensions
}

// GetMessageExtensionsOk returns a tuple with the MessageExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticateThreeDSSessionRequest) GetMessageExtensionsOk() ([]ThreeDSMessageExtension, bool) {
	if o == nil || IsNil(o.MessageExtensions) {
		return nil, false
	}
	return o.MessageExtensions, true
}

// HasMessageExtensions returns a boolean if a field is not nil.
func (o *AuthenticateThreeDSSessionRequest) HasMessageExtensions() bool {
	if o != nil && !IsNil(o.MessageExtensions) {
		return true
	}

	return false
}

// SetMessageExtensions gets a reference to the given []ThreeDSMessageExtension and assigns it to the MessageExtensions field.
func (o *AuthenticateThreeDSSessionRequest) SetMessageExtensions(v []ThreeDSMessageExtension) {
	o.MessageExtensions = v
}

func (o AuthenticateThreeDSSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticateThreeDSSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authentication_category"] = o.AuthenticationCategory
	toSerialize["authentication_type"] = o.AuthenticationType
	if o.ChallengePreference.IsSet() {
		toSerialize["challenge_preference"] = o.ChallengePreference.Get()
	}
	if !IsNil(o.PurchaseInfo) {
		toSerialize["purchase_info"] = o.PurchaseInfo
	}
	if !IsNil(o.MerchantInfo) {
		toSerialize["merchant_info"] = o.MerchantInfo
	}
	toSerialize["requestor_info"] = o.RequestorInfo
	if !IsNil(o.CardholderInfo) {
		toSerialize["cardholder_info"] = o.CardholderInfo
	}
	if o.BroadcastInfo != nil {
		toSerialize["broadcast_info"] = o.BroadcastInfo
	}
	if o.MessageExtensions != nil {
		toSerialize["message_extensions"] = o.MessageExtensions
	}
	return toSerialize, nil
}

type NullableAuthenticateThreeDSSessionRequest struct {
	value *AuthenticateThreeDSSessionRequest
	isSet bool
}

func (v NullableAuthenticateThreeDSSessionRequest) Get() *AuthenticateThreeDSSessionRequest {
	return v.value
}

func (v *NullableAuthenticateThreeDSSessionRequest) Set(val *AuthenticateThreeDSSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticateThreeDSSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticateThreeDSSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticateThreeDSSessionRequest(val *AuthenticateThreeDSSessionRequest) *NullableAuthenticateThreeDSSessionRequest {
	return &NullableAuthenticateThreeDSSessionRequest{value: val, isSet: true}
}

func (v NullableAuthenticateThreeDSSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticateThreeDSSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
