/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the TokenCursorPaginatedList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenCursorPaginatedList{}

// TokenCursorPaginatedList struct for TokenCursorPaginatedList
type TokenCursorPaginatedList struct {
	Pagination *CursorPagination `json:"pagination,omitempty"`
	Data       []Token           `json:"data,omitempty"`
}

// NewTokenCursorPaginatedList instantiates a new TokenCursorPaginatedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenCursorPaginatedList() *TokenCursorPaginatedList {
	this := TokenCursorPaginatedList{}
	return &this
}

// NewTokenCursorPaginatedListWithDefaults instantiates a new TokenCursorPaginatedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenCursorPaginatedListWithDefaults() *TokenCursorPaginatedList {
	this := TokenCursorPaginatedList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *TokenCursorPaginatedList) GetPagination() CursorPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret CursorPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCursorPaginatedList) GetPaginationOk() (*CursorPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field is not nil.
func (o *TokenCursorPaginatedList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given CursorPagination and assigns it to the Pagination field.
func (o *TokenCursorPaginatedList) SetPagination(v CursorPagination) {
	o.Pagination = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenCursorPaginatedList) GetData() []Token {
	if o == nil {
		var ret []Token
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenCursorPaginatedList) GetDataOk() ([]Token, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field is not nil.
func (o *TokenCursorPaginatedList) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Token and assigns it to the Data field.
func (o *TokenCursorPaginatedList) SetData(v []Token) {
	o.Data = v
}

func (o TokenCursorPaginatedList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenCursorPaginatedList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableTokenCursorPaginatedList struct {
	value *TokenCursorPaginatedList
	isSet bool
}

func (v NullableTokenCursorPaginatedList) Get() *TokenCursorPaginatedList {
	return v.value
}

func (v *NullableTokenCursorPaginatedList) Set(val *TokenCursorPaginatedList) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenCursorPaginatedList) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenCursorPaginatedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenCursorPaginatedList(val *TokenCursorPaginatedList) *NullableTokenCursorPaginatedList {
	return &NullableTokenCursorPaginatedList{value: val, isSet: true}
}

func (v NullableTokenCursorPaginatedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenCursorPaginatedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
