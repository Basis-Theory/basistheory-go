/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the CursorPagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CursorPagination{}

// CursorPagination struct for CursorPagination
type CursorPagination struct {
	PageSize NullableInt32  `json:"page_size,omitempty"`
	Next     NullableString `json:"next,omitempty"`
}

// NewCursorPagination instantiates a new CursorPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPagination() *CursorPagination {
	this := CursorPagination{}
	return &this
}

// NewCursorPaginationWithDefaults instantiates a new CursorPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPaginationWithDefaults() *CursorPagination {
	this := CursorPagination{}
	return &this
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPagination) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize.Get()) {
		var ret int32
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPagination) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field is not nil.
func (o *CursorPagination) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given NullableInt32 and assigns it to the PageSize field.
func (o *CursorPagination) SetPageSize(v int32) {
	o.PageSize.Set(&v)
}

// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *CursorPagination) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *CursorPagination) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetNext returns the Next field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPagination) GetNext() string {
	if o == nil || IsNil(o.Next.Get()) {
		var ret string
		return ret
	}
	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPagination) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// HasNext returns a boolean if a field is not nil.
func (o *CursorPagination) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given NullableString and assigns it to the Next field.
func (o *CursorPagination) SetNext(v string) {
	o.Next.Set(&v)
}

// SetNextNil sets the value for Next to be an explicit nil
func (o *CursorPagination) SetNextNil() {
	o.Next.Set(nil)
}

// UnsetNext ensures that no value is present for Next, not even an explicit nil
func (o *CursorPagination) UnsetNext() {
	o.Next.Unset()
}

func (o CursorPagination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CursorPagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PageSize.IsSet() {
		toSerialize["page_size"] = o.PageSize.Get()
	}
	if o.Next.IsSet() {
		toSerialize["next"] = o.Next.Get()
	}
	return toSerialize, nil
}

type NullableCursorPagination struct {
	value *CursorPagination
	isSet bool
}

func (v NullableCursorPagination) Get() *CursorPagination {
	return v.value
}

func (v *NullableCursorPagination) Set(val *CursorPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPagination(val *CursorPagination) *NullableCursorPagination {
	return &NullableCursorPagination{value: val, isSet: true}
}

func (v NullableCursorPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
