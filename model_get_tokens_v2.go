/*
Basis Theory API

## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package basistheory

import (
	"encoding/json"
)

// checks if the GetTokensV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTokensV2{}

// GetTokensV2 struct for GetTokensV2
type GetTokensV2 struct {
	Start NullableString `json:"start,omitempty"`
	Size  NullableInt32  `json:"size,omitempty"`
}

// NewGetTokensV2 instantiates a new GetTokensV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTokensV2() *GetTokensV2 {
	this := GetTokensV2{}
	return &this
}

// NewGetTokensV2WithDefaults instantiates a new GetTokensV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTokensV2WithDefaults() *GetTokensV2 {
	this := GetTokensV2{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTokensV2) GetStart() string {
	if o == nil || IsNil(o.Start.Get()) {
		var ret string
		return ret
	}
	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTokensV2) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// HasStart returns a boolean if a field is not nil.
func (o *GetTokensV2) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given NullableString and assigns it to the Start field.
func (o *GetTokensV2) SetStart(v string) {
	o.Start.Set(&v)
}

// SetStartNil sets the value for Start to be an explicit nil
func (o *GetTokensV2) SetStartNil() {
	o.Start.Set(nil)
}

// UnsetStart ensures that no value is present for Start, not even an explicit nil
func (o *GetTokensV2) UnsetStart() {
	o.Start.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTokensV2) GetSize() int32 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTokensV2) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field is not nil.
func (o *GetTokensV2) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt32 and assigns it to the Size field.
func (o *GetTokensV2) SetSize(v int32) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *GetTokensV2) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *GetTokensV2) UnsetSize() {
	o.Size.Unset()
}

func (o GetTokensV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTokensV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Start.IsSet() {
		toSerialize["start"] = o.Start.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return toSerialize, nil
}

type NullableGetTokensV2 struct {
	value *GetTokensV2
	isSet bool
}

func (v NullableGetTokensV2) Get() *GetTokensV2 {
	return v.value
}

func (v *NullableGetTokensV2) Set(val *GetTokensV2) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTokensV2) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTokensV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTokensV2(val *GetTokensV2) *NullableGetTokensV2 {
	return &NullableGetTokensV2{value: val, isSet: true}
}

func (v NullableGetTokensV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTokensV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
